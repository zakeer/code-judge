version: '3.8'

services:
  nginx:
    image: nginx:1.25
    container_name: judge_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - judge_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: judge_app
    environment:
      - NODE_ENV=production
      - PORT=4000
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://admin:secure_password@rabbitmq:5672
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - judge_network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: judge_rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management interface port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=secure_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - judge_network

  redis:
    image: redis:7.2
    container_name: judge_redis
    command: redis-server --requirepass secure_redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - judge_network

volumes:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local

networks:
  judge_network:
    driver: bridge